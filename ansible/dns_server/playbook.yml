---
- name: Setup DNS Server
  hosts: all

  tasks:
  - name: Remove /etc/resolv.conf
    ansible.builtin.shell: rm /etc/resolv.conf
    args:
      removes: /etc/resolv.conf
    when:
    - "'/etc/resolv.conf' is not ansible.builtin.link"
    - "'/etc/resolv.conf' is ansible.builtin.exists"
    become: true

  - name: Create /etc/resolv.conf link
    ansible.builtin.shell: ln -s /usr/lib/systemd/resolv.conf /etc/resolv.conf
    args:
      creates: /ets/resolv.conf
    when: "'/etc/resolv.conf' is not ansible.builtin.exists"
    become: true

  - name: Write hosts
    ansible.builtin.blockinfile:
      path: /etc/hosts
      block: |
        192.168.86.100 picluster0
        192.168.86.101 picluster1
    become: true

  - name: CoreDNS user
    ansible.builtin.user:
      name: coredns
      create_home: false
      password: '!'
    become: true
  
  - name: Extract CoreDNS w/ k8s_gateway plugin
    ansible.builtin.unarchive:
      remote_src: true
      src: https://github.com/ori-edge/k8s_gateway/releases/download/v0.4.0/k8s_gateway_0.4.0_linux_arm64.tar.gz
      dest: /usr/bin/
      mode: '0755'
      owner: root
      group: root
    become: true
  
  - name: CoreDNS configuration directory exists
    ansible.builtin.file:
      path: /etc/coredns
      state: directory
      mode: '0755'
    become: true

  - name: CoreDNS configuration
    ansible.builtin.blockinfile:
      path: /etc/coredns/Corefile
      block: |
        . {
          hosts {
            picluster0.int.darkarctic.com  picluster0
            picluster1.int.darkarctic.com  picluster1
          }
          forward . 8.8.8.8 8.8.4.4
          reload
          whoami
          log
          errors
          cache 30
        }

        int.darkarctic.com:53 {
            hosts {
              192.168.10.100  picluster0
              192.168.10.101  picluster1
              fallthrough
            }
            k8s_gateway {
              kubeconfig /etc/rancher/k3s/k3s.yaml
            }
        }

        test.almostauto.com:53 {
            k8s_gateway {
              kubeconfig /etc/rancher/k3s/k3s.yaml
            }
        }
      mode: '0644'
      owner: root
      group: root
      create: true
    become: true

  - name: CoreDNS working directory
    ansible.builtin.file:
      path: /var/lib/coredns
      state: directory
      owner: coredns
      mode: 755
    become: true

  - name: CoreDNS systemd unit
    ansible.builtin.blockinfile:
      path: /lib/systemd/system/coredns.service
      block: |
        [Unit]
        Description=CoreDNS DNS server
        Documentation=https://coredns.io
        After=network.target

        [Service]
        PermissionsStartOnly=true
        LimitNOFILE=1048576
        LimitNPROC=512
        CapabilityBoundingSet=CAP_NET_BIND_SERVICE
        AmbientCapabilities=CAP_NET_BIND_SERVICE
        NoNewPrivileges=true
        User=coredns
        WorkingDirectory=/var/lib/coredns
        ExecStart=/usr/bin/coredns -conf=/etc/coredns/Corefile
        ExecReload=/bin/kill -SIGUSR1 $MAINPID
        Restart=on-failure
        StandardOutput=append:/var/log/coredns.log
        StandardError=append:/var/log/coredns.err.log

        [Install]
        WantedBy=multi-user.target
      owner: root
      group: root
      mode: "0644"
      create: true
    become: true

  - name: Start CoreDNS
    ansible.builtin.systemd_service:
      name: coredns
      enabled: yes
      state: stopped
    become: true
